0.연산자 우선순위 - 위에서부터 아래로

  - 가장 높은 우선순위 () [] 

  - 관계(비교) 연산자(>,>=,==,<,<= ...)

  - 논리 연산자 (&&, ||)

  ex) num > 10 && num < 100
          1     3     2

  - 가장 낮은 우선 순위

1. 조건문
  if (조건식) { // 조건식 - 관계(비교)연산자 + 논리연산자
    // 조건식이 참이면 수행이 되는 영역
  }


2. 반복문
  1) while
    while(조건식) { // 조건식 - 관계(비교)연산자 + 논리연산자
      // 조건식이 참일때 반복되는 구간
      // 반복 멈춤 - break;
      // 현재 반복 멈추 -> 새로시작 -> continue;(건너뛰기)
    }
  
  2) do ~ while
    do~while의 조건
  
  3) for
    - 반복문 중에서 가장 많이 사용되는 반목문
    for ( 초기화; 조건식; 증감식) {
      수행문;
    }

    113page 1분 복습
    for ( int num = 1; num <= 10; num++)

    - for 문을 자주 사용하는 이유
      : 반복 횟수를 관리할 수 있기 때문.

    for문 요소 생략하기
    1. 초기화식 생략

    2. 조건식 생략

    3. 증감식 생략

    4. 요소 모두 생략

    중첩된 반복문
    - 반복문 안에 반복문

    P118
    for : 반복 횟수가 정해진 경우
    do~while : 반드시 한번 이상 수행해야 하는 경우
    while : 조건의 참, 거짓에 따라 반복문이 수행(가장 단순한 구조)

    P120

    break -> 반복을 중단( 현재의 구간({})에서 반복을 중단.)
