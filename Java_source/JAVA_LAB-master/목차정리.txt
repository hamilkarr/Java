05. 클래스와 객체1
  2. 클래스 살펴보가
    - 클래스 속성을 구현하는 멤버변수
    - 클래스 기능을 구현하는 메서드
  
  3. 메서드
  4. 클래스와 인스턴스
  5. 생성자
  6. 참조자료형
  7. 정보은닉

06. 클래스와 객체2
  1. this 예약어
  2. 객체간 협력
    학생 + 버스 + 지하철 + 학생버스지하철
  3. static 변수
  4. 변수 유효범위
    멤버변수
    지역변수
    스태틱변수
  5. 싱글톤 패턴



07.배열과 ArrayList
  1. 배열이란
    - 동일 자료형 + 연속된 물리적 나열 -> 동일 자료형 데이터를 여러개 담을 때 사용
    int[] nums = new int[4]; // int 자료형 4개의 공간

    자료형[] 변수명 =  new 자료형[공간 갯수];
    배열 공간 생성후 -> 값을 최초로 대입 => 초기화

    배열 각 공간에 접근하는 방식 -> [인텍스 번호] => 인덱스 연산자
    Chapter7\src\array\CharArray.java
    알파벳 문자와 아스키 코드값 출력
    
    - 배열 복사하기
      System.arraycopy()
    - 얕은 복사하기
    - 깊은 복사하기
        Exam2\src\chapter7\chapter7_1\ArrayEx3.java
    - 향상된 for문

  2. 다차원 배열
    -다차원 배열이란
    -이차원 배열

  3. ArrayList 클래스 사용하기
    - 기존 배열의 단점과 ArrayList
    - ArrayList의 주요 메서드
    - ArrayList 활용하기
  
  4. 배열 응용 프로그램
    - Student 클래스 구현하기
    - Subject 클래스 구현하기
    - 테스트 클래스 구현후 결과 확인하기

08.상속과 다형성
  1.상속이란
    -클래스의 상속 
      extends

      상위클래스 ---------- 하위클래스
        보다 일반적           보다 구체적

      생성자의 목적
        - 인스턴스 생성

      this - 인스턴스의 주소를 스스로 참조하는 예약어
           - 생성자

      super
        - 상위클래스의 주소를 참조하는 예약어
        - 상위클래스의 생성자

    -상속을 고려하여 고객 관리 프로그램 구현하기
  
  2. 상속에서 클래스 생성과 형 변환
    - 하위 클래스가 생성되는 과정
    - 부모를 부르는 예약어, super
    - 상위 클래스로 묵시적 클래스 형 변환

  3. 메서드 오버라이딩
    - 상위 클래스 메서드 재정의하기
    - 묵시적 클래스 형 변환과 메서드 재정의 
    - 가상 메서드

  4. 다형성
    - 다형성이란
    - 다형성의 장점

  5. 다형성 활용하기
    - 일반 고객과 vip 고객의 중간등급 만들기
    - 상속은 언제 사용할까?
      Is-A 관계, Has-A관계

  6. 다운 캐스팅과 instanceof
    - 하위 클래스로 형 변환, 다운 캐스팅
    - instanceof
      Chapter9\src\animal\Animal.java

09. 추상 클래스
  1. 추상클래스
    - 추상 클래스란?
    - 추상 클래스 구현하기
    - 추상 클래스를 만드는 이유

  2. 템플릿 메서드 
    - 추상 클래스와 템플릿 메서드
    - 템플릿 메서드의 역할

  3. 템플릿 메서드 응용하기
    - 클래스 기능과 관계
    - 클래스 설계하기
    - 추상 클래스와 다형성

  4. final 예약어
    - 상수를 의미하는 final 변수
    - 상속할 수 없는 final 클래스
    - 프로그램을 잘 구현하는 또 다른 방법

10. 인터페이스
  1. 인터페이스란?
    - 구현 코드가 없는 인터페이스
    - 클래스에서 인터페이스 구현하기
    - 클래스 완성하고 실행하기
    - 인터페이스 구현과 형 변환

  2. 인터페이스와 다형성
    - 인터페이스의 역할
    - 인터페이스와 다형성
    - 클라이언트가 클래스를 사용하는 방법
  
  3. 인터페이스 요소 살펴보기
    - 인터페이스 상수
    - 디폴트 메서드와 정적 메서드
    - 디폴트 메서드
    - 정적 메서드
    - private 메서드

  4. 인터페이스 활용하기
    - 한클래스가 여러 인터페이스를 구현하는 경우
    - 두 인터페이스의 디폴트 메서드가 중복되는 경우
    - 인터페이스 상속하기
    - 인터페이스 구현과 상속
    - 실무에서 인터페이스를 사용하는 경우

  