1. 인터페이스란?
  장치,장비
  컴퓨터 본체의 전체 설계도 -> 추상 클래스
    각각 구성 장치의 규겨 -> 인터페이스
    - 중앙처리장치 (CPU)
    - 메인보드
    - 랩
    - 보조 기억장치(하드, SSD..)
    - 전원 공급장치

    추상 메서드 -> 구현 부분이 없는 메서드 (메서드 정의)
    
    class -> interface

    implements 인터페이스명 -> 구현이 가능

    클래스 상속 -> 무조건 1개만 가능
    인터페이스 -> 여러개 사용 구현 가능.
      implements 인터페이스명, 인터페이스명, ....

2. 인터페이스와 다형성

3. 인터페이스 요소 살펴보기

  1) 인터페이스 상수
    인스턴스 생성 X -> 멤버 변수
    -> 변수 -> 의미 -> 사용 가능 -> 정적 상수
    변수를 선언 -> 컴파일러가 public static final 을 추가하여 상수가 된다.

  2) 디폴트 메서드  
    default 메서드 정의 -> 구현하는 클래스에서 일반 인스턴스 메서드처럼 사용 가능

  3) 정적메서드(static)
  4) private 메서드로 사용 가능 -> 인터페이스 내부에서 사용할 용도

4. 인터페이스 활용하기
  1) 한 클래스가 여러 인터페이스 구현

  2) 디폴트 메서드 중복
    -> 오류 -> 메서드의 출처를 결정하기 애매함
    -> 해결방법 -> 애매함을 없애 주면 된다.
      1) 재정의를 통해서 출처를 명시
      2) 중복되는 메서드를 구현하는 클래스에서 구현
  
  3) 인터페이스 상속
    다중 상속이 가능

  인터페이스는 인스턴스 생성 불가
    예외 1) 지역 내부 클래스
            (메서드 내부, 함수 내부)
         
         2) 클래스의 변수

         3) 미 구현된 메서드를 재정의 하게되면