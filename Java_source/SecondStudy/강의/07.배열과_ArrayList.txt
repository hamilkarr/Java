P199
1. 배열이란? 
  동일한 자료형의 연속된 공간나열
  int[] nums = new int[4] -> int 자료형 공간 4개를 일렬로 나열.

  자료형[] 변수명 =  new 자료형[공간의 갯수];

  -> 공간 -> 값을 담을 빈공간.
  배열은 -> 물리적순서 == 논리적 순서(0,1,2,3)



  0,1,2,3,4 -> 인덱스 번호 -> 배열 공간을 접근 -> for 문이 배열과 가장 어울리는 반복문

  배열 -> length -> 공간의 갯수(요소의 갯수 X)
  
  자료형[] 변수명 = new 자료형[] {값1,값2,값3 ....};
  자료형[] 변수명 = {값1,값2,값3,값4 ....};

  자료형[] 변수명;
  변수명 = {값1,값2,값3}; (X)
  변수명 = new 자료형[] {값1,값2,값3 ....}

  기본 자료형 (공간의 크기가 정해져 있는 배열)
    - byte,short,char,int,long,float,double
  
  참조 자료형 (인스턴스의 주소를 담는 공간만 정해져 있는 배열)
    - 클래스 자료형 ( 인스턴스의 주소 )

  Objects.deepCopy

2. 다차원 배열
  차수가 여러개인 배열
  int[] nums = int num[];

  int[][] nums = int num[3][4];
  int[][][] nums = int num[3][4][5]; // 3차원 배열

  int[][] nums =new int nums[][] {{1,2,3},{4,5,6}};
  int[][] nums = {{1,2,3},{4,5,6}};

3. ArrayList 클래스 사용하기
  배열 -> length -> 요소

  컬렉션 프레임워크
    - ArrayList 
      -> 배열의 추가, 수정 삭제가 용이하고
      -> 요소의 갯수를 체크하는 메서드를 제공

4. 배열 응용 프로그램
  -P226
    Student 클래스
      -학변
      -학생 이름
      -수강 과목 목록
    
    Subject 클래스
      -

5. 콜렉션 프레임워크

  Collection 인터페이스
    - List 인터페이스 
      -> 순차 자료구조(배열) -> 순서(0,1,2,3,4....)
        ArrayList
        LinkedList
        Vector
        Queue
        Stack

    - Set 인터페이스 -> 집합 자료구조(순서 X), 중복 X
      HashSet -> 중복에 대한 여부 -> Object -> equals, hashCode
      TreeSet -> HashSet + 정렬
              -> Interface Comparable -> compareTo -> 정렬기준
                  - 양수 -> 오름차순
                  - 음수 -> 내림차순
              -> interface java.util.Comparrator -> compare

  Map 인터페이스
    key - value 쌍 자료구조
    HashMap
    TreeMap -> HashMap + 순서
    

