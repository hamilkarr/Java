11-1. Object 클래스
  Object 클래스는 모든 자바 클래스의 최상위 클래스.
    -> 모든 클래스는 Object 클래스로 부터 상속을 받는다.
  
  Object 클래스의 주요 메서드
    
    - String toString() : 객체를 문자열로 표현하여 반환.
    - boolean equals(Object object) : 두 인스턴스가 동일한지 여부를 반환.
    - int hashCode() : 객체의 해시코드 값을 반환
    - Object clone() : 객체를 복제하여 동일한 멤버 변수 값을 가진 새로운 인스턴스를 생성.
    - Class getClass() : 객체의 Class 클래스를 반환.

    주의) 모든 Object 메서드를 재정의 할 수 있는것은 아님. final 예약어로 선언한 메서드는 재정의 할 수 없음.

    a) toString() 메서드.
      - 재정의 하지 않은, 원형의 toString은 생성된 인스턴스의 클래스 이름과 주소값 만을 보여줌.
      - 원형의 toString은 무쓸모한 경우가 많기 때문에, JDK의 기본 클래스 중에서는 toString() 메서드를 재정의해 둔 경우가 많다. 

    b) equals() 메서드.
      - equals() 메서드의 원래 기능은 두 인스턴스의 주소 값을 비교해서 boolean 값으로 반환해주는 것.
      - equals() 메서드 또한 재정의해서 사용하는 경우가 많다.
      
      P362 나혼자 코딩

    c) hashCode() 메서드
      
    d) clone()

11-2 String 클래스

11-3 Wrapper 클래스
  
  a) Integer
    Integer number1 = Integer.valueOf(100);
    int number1 = Integer.parseInt("100");
      - 문자열로 전달된 숫자를 문자열에서 int 값을 바로 가져와서 반환.

  오토박싱과 언박싱
    Integer -> int 언박싱
    int -> Integer 오토박싱

11-4 Class 클래스
  모르는 클래스의 정보를 사용할 경우, 클래스의 정보를 직접 찾아야함. 이때 사용하는게 Class  클래스.

  a) Object 클래스의 getClass() 메서드 사용하기.
  String s = new String();
  Class c = s.getClass;

  b) 클래스 파일 이름을 Class 변수에 직접 대입하기.
    Class c = String.class;
  
  c) Class.forName("className")메서드 사용하기
    Class c = Class.forName("java.lang.String");

  리플렉션 : 클라스의 자료형을 모르는 상태에서, Class 클래스를 활용하여 그 클래스의 정보를 가져오고, 이 정보를 활용해서 인스턴스를 생성하거나 메서드를 호출하는 방식.

  동적 로딩