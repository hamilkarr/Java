Object 클래스 - P351
   1) java.lang 패키지
      가장 많이 쓰이는 패키지
        -> 컴파일러가 자동으로 추가
        (import.java.lang.*;)

    2) 모든 클래스의 최상위 클래스
    3) toString()
         Object
            .toString() -> 인스턴스를 출력하면 자동으로 

    4)
    5) hashCode();0

String 클래스
   - 문자를 다루는 클래스
   
   1) String을 선언하는 두가지 방법
      String text1 = "ABC"
      String test2 = new String("ABC"); -> 힙메모리에 할당

   2) String 클래스의 final byte[] 변수
      문자열은 불변한다.

      문자열을 변경 -> 새로 만들어서 변경. -> 메모리에 생성, 기존 남아있던 메모리는 제거됨. -> 메모리의 생성과 제거가 반복되는 낭비.

   3) StringBuffer와 StringBuilder 클래스 활용하기
      byte[] value -> 상수 X  -> 여러개 추가 동일 배열 공간에서 가능
         -> 버퍼 -> 한꺼번에 문자열을 결합

   4) 가변 인수
      자료형... 변수명 -> 가변인수 -> 배열 형태로 반환

      (자바스크립트)
         function glue(separator, .... texts) {
            
            return texts.join(separator)
         }
         glue("/", "apple","orange","mango");
         -> "apple/orange/mango"

      자바예제
      D:\hamilkarr_coding\Java\Java_source\SecondStudyPartTwo\src\chapter11\sub4String\Ex4Varargs.java

Wrapper 클래스
   1) 자료형을 위한 클래스
      각 자료형별 편의기능 모음 -> 기본 자료형마다 존재
         int -> Integer
         long -> Long
         float -> Float
         double -> Double

         byte -> Byte
         boolean -> Boolean
         short -> Short
         char -> Character

   2) Integer 클래스 사용하기
      src\chapter11BasicClass\sub5Wrapper\Ex1Wrapper.java

   3) 오토박싱과 언박싱
      src\chapter11BasicClass\sub5Wrapper\Ex2AutoBoxingUnBoxing.java

      오토박싱
         기본 자료형 -> Wrapper 클래스
      언박싱
         Wrapper -> 기본 자료형

Class 클래스
   1)

   2) 사용하는 방법
   
   3) Class 클래스를 활용해 클래스 정보 알아보기
         생성자, 메서드, 멤버 변수

   4) 리플렉션 클래스 메서드
         동적으로 인스턴스를 생성
